name: My Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: recup le foutu code
        uses: actions/checkout@v4
      - name: mais on est où là ?
        run: pwd
      - name: Lister les fichiers et dossiers
        run: ls -la
  pylint:
    runs-on: ubuntu-latest
    steps:
      # Récupération du code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Installer Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Restaurer le cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Installer pylint
      - name: Install pylint et les requirements
        run: |
          python -m pip install --upgrade pip
          pip install pylint
          pip install -r app/requirements.txt

      # Lancer pylint
      - name: Run pylint
        run: |
          pylint app/  

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      # Récupération du code avec une action officielle de GitHub (la v4 en l'occurrence)
      - name: Checkout repository
        uses: actions/checkout@v4

      # Installer Python avec une action github encore...
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # Restaurer le cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Installer les dépendances
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt

      # Exécuter les tests
      - name: Run unit tests
        run: pytest -vv #/tests/tests_unitaires

  deploy_job:
    needs: unit-tests # ne se lance que si tests_job a réussi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        run: echo "Déploiement ici..."